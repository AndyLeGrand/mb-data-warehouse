# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "develop", "master" ]
  pull_request:
    branches: [ "develop", "master" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Test with pytest
      run: |
        pytest

    - name: package application
      run: |
        emr package --entry-point main.py

    - name: Configure AWS Credentials
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: eu-north-1
      run: |
        
        mkdir ~/.aws
        
        echo "[default]" > ~/.aws/credentials
        echo "aws_access_key_id=${AWS_ACCESS_KEY_ID}" >> ~/.aws/credentials
        echo "aws_secret_access_key=${AWS_SECRET_ACCESS_KEY}" >> ~/.aws/credentials
        
        echo "[default]" > ~/.aws/config
        echo "region=${AWS_DEFAULT_REGION}" >> ~/.aws/config
        

    - name: deploy application
      run: |
        
        if [[ "${{ github.ref }}" == "refs/heads/master" ]]; then \
          echo "S3_BUCKET=mb-data-warehouse" >> $env:S3_BUCKET \
        elif [[ "${{ github.ref }}" == "refs/heads/develop" ]]; then \
          echo "S3_BUCKET=akreit-dev-bucket" >> $env:S3_BUCKET \
        fi
        
        echo "deploying to the following s3 bucket: ${S3_BUCKET}
        

        emr deploy --entry-point main.py --s3-code-uri s3://${S3_BUCKET}/pr_issues_package/${{github.ref_name}}/
    
